Grammar

    0 $accept: inicio $end

    1 inicio: NOMBRE '=' E
    2       | E

    3 E: E '+' E
    4  | E '-' E
    5  | E '*' E
    6  | E '/' E
    7  | E '^' E
    8  | '(' E ')'
    9  | NUMERO
   10  | BIN
   11  | OCTAL
   12  | HEX


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 8
    ')' (41) 8
    '*' (42) 5
    '+' (43) 3
    '-' (45) 4
    '/' (47) 6
    '=' (61) 1
    '^' (94) 7
    error (256)
    NOMBRE (258) 1
    NUMERO (259) 9
    BIN (260) 10
    OCTAL (261) 11
    HEX (262) 12


Nonterminals, with rules where they appear

    $accept (16)
        on left: 0
    inicio (17)
        on left: 1 2
        on right: 0
    E (18)
        on left: 3 4 5 6 7 8 9 10 11 12
        on right: 1 2 3 4 5 6 7 8


State 0

    0 $accept: . inicio $end

    NOMBRE  shift, and go to state 1
    NUMERO  shift, and go to state 2
    BIN     shift, and go to state 3
    OCTAL   shift, and go to state 4
    HEX     shift, and go to state 5
    '('     shift, and go to state 6

    inicio  go to state 7
    E       go to state 8


State 1

    1 inicio: NOMBRE . '=' E

    '='  shift, and go to state 9


State 2

    9 E: NUMERO .

    $default  reduce using rule 9 (E)


State 3

   10 E: BIN .

    $default  reduce using rule 10 (E)


State 4

   11 E: OCTAL .

    $default  reduce using rule 11 (E)


State 5

   12 E: HEX .

    $default  reduce using rule 12 (E)


State 6

    8 E: '(' . E ')'

    NUMERO  shift, and go to state 2
    BIN     shift, and go to state 3
    OCTAL   shift, and go to state 4
    HEX     shift, and go to state 5
    '('     shift, and go to state 6

    E  go to state 10


State 7

    0 $accept: inicio . $end

    $end  shift, and go to state 11


State 8

    2 inicio: E .
    3 E: E . '+' E
    4  | E . '-' E
    5  | E . '*' E
    6  | E . '/' E
    7  | E . '^' E

    '+'  shift, and go to state 12
    '-'  shift, and go to state 13
    '*'  shift, and go to state 14
    '/'  shift, and go to state 15
    '^'  shift, and go to state 16

    $default  reduce using rule 2 (inicio)


State 9

    1 inicio: NOMBRE '=' . E

    NUMERO  shift, and go to state 2
    BIN     shift, and go to state 3
    OCTAL   shift, and go to state 4
    HEX     shift, and go to state 5
    '('     shift, and go to state 6

    E  go to state 17


State 10

    3 E: E . '+' E
    4  | E . '-' E
    5  | E . '*' E
    6  | E . '/' E
    7  | E . '^' E
    8  | '(' E . ')'

    '+'  shift, and go to state 12
    '-'  shift, and go to state 13
    '*'  shift, and go to state 14
    '/'  shift, and go to state 15
    '^'  shift, and go to state 16
    ')'  shift, and go to state 18


State 11

    0 $accept: inicio $end .

    $default  accept


State 12

    3 E: E '+' . E

    NUMERO  shift, and go to state 2
    BIN     shift, and go to state 3
    OCTAL   shift, and go to state 4
    HEX     shift, and go to state 5
    '('     shift, and go to state 6

    E  go to state 19


State 13

    4 E: E '-' . E

    NUMERO  shift, and go to state 2
    BIN     shift, and go to state 3
    OCTAL   shift, and go to state 4
    HEX     shift, and go to state 5
    '('     shift, and go to state 6

    E  go to state 20


State 14

    5 E: E '*' . E

    NUMERO  shift, and go to state 2
    BIN     shift, and go to state 3
    OCTAL   shift, and go to state 4
    HEX     shift, and go to state 5
    '('     shift, and go to state 6

    E  go to state 21


State 15

    6 E: E '/' . E

    NUMERO  shift, and go to state 2
    BIN     shift, and go to state 3
    OCTAL   shift, and go to state 4
    HEX     shift, and go to state 5
    '('     shift, and go to state 6

    E  go to state 22


State 16

    7 E: E '^' . E

    NUMERO  shift, and go to state 2
    BIN     shift, and go to state 3
    OCTAL   shift, and go to state 4
    HEX     shift, and go to state 5
    '('     shift, and go to state 6

    E  go to state 23


State 17

    1 inicio: NOMBRE '=' E .
    3 E: E . '+' E
    4  | E . '-' E
    5  | E . '*' E
    6  | E . '/' E
    7  | E . '^' E

    '+'  shift, and go to state 12
    '-'  shift, and go to state 13
    '*'  shift, and go to state 14
    '/'  shift, and go to state 15
    '^'  shift, and go to state 16

    $default  reduce using rule 1 (inicio)


State 18

    8 E: '(' E ')' .

    $default  reduce using rule 8 (E)


State 19

    3 E: E . '+' E
    3  | E '+' E .
    4  | E . '-' E
    5  | E . '*' E
    6  | E . '/' E
    7  | E . '^' E

    '*'  shift, and go to state 14
    '/'  shift, and go to state 15
    '^'  shift, and go to state 16

    $default  reduce using rule 3 (E)


State 20

    3 E: E . '+' E
    4  | E . '-' E
    4  | E '-' E .
    5  | E . '*' E
    6  | E . '/' E
    7  | E . '^' E

    '*'  shift, and go to state 14
    '/'  shift, and go to state 15
    '^'  shift, and go to state 16

    $default  reduce using rule 4 (E)


State 21

    3 E: E . '+' E
    4  | E . '-' E
    5  | E . '*' E
    5  | E '*' E .
    6  | E . '/' E
    7  | E . '^' E

    '^'  shift, and go to state 16

    $default  reduce using rule 5 (E)


State 22

    3 E: E . '+' E
    4  | E . '-' E
    5  | E . '*' E
    6  | E . '/' E
    6  | E '/' E .
    7  | E . '^' E

    '^'  shift, and go to state 16

    $default  reduce using rule 6 (E)


State 23

    3 E: E . '+' E
    4  | E . '-' E
    5  | E . '*' E
    6  | E . '/' E
    7  | E . '^' E
    7  | E '^' E .

    '^'  shift, and go to state 16

    $default  reduce using rule 7 (E)
